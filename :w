data TraitType = 
    STRUCTURE_GEOMETRY | -- geometry of structures within cell
    OUTER_MEMBRANE     | -- cell membrane
    OTHER_TRAITS         -- placeholder
    deriving Show

data Traits = Traits
    { name  :: TraitType
    , value :: Float
    } deriving Show

data Organism = Organism
    { traits     :: [Traits]
    , generation :: Int
    , lifetime   :: Float
    } deriving Show

neworganism :: [Traits] -> [Int] -> [Float] -> Organism
neworganism traits generation lifetime
    | generation \= 0 = error "non-zero initial generation"
    | lifetime   \= 0 = error "non-zero initial lifetime"
    | otherwise       = { traits = traits
                        , generation = generation
                        , lifetime   = lifetime
                        }

for list action = mapM_ action list

main :: IO ()
main = do
    let generations :: Integer = 100
    let organisms :: [Organism] = [{ [] , 0 ,  0 }]
                                  

    for [ 0..generations ] (\ i -> do
        
        )

    print (traits)
